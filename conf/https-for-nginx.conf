
#user  nobody;
worker_processes  1;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #关于nginx https的相关配置
    server {
      server_name  www.example.com;
      listen 443;
      default_type text/html;

      ssl on;
      ssl_certificate /home/nginx/app/openresty/nginx/conf/ssl/cert.pem;     # 公钥
      ssl_certificate_key /home/nginx/app/openresty/nginx/conf/ssl/cert.key; # 私钥
      proxy_ssl_session_reuse off;                                           # 当为on时，可以让一个ssl会话被重用
      add_header Strict-Transport-Security max-age=63072000;                 # 告知浏览器只能通过HTTPS访问,禁止HTTP方式
      add_header X-Content-Type-Options nosniff; #用来指定浏览器对未指定或错误指定 Content-Type 资源真正类型的猜测行为，nosniff 表示不允许任何猜测
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true'; # 解决跨域问题

      location /test {
        # ...特殊处理的部分...
        proxy_set_header Host $host;
        proxy_pass http://localhost:8080; # 转到后端服务器
      }

    }
  }
